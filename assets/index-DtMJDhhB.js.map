{"version":3,"file":"index-DtMJDhhB.js","sources":["../../src/utils/shake-camera.js","../../src/utils/sounds.js","../../src/entities/moving-infected.js","../../src/utils/digits-code.js","../../src/scenes/exterior.js","../../src/entities/idle-infected.js","../../src/scenes/intro.js","../../src/scenes/reception.js","../../src/scenes/corridor.js","../../src/main.js"],"sourcesContent":["// Functions to adapt the camera\r\n\r\nconst overlay = document.getElementById('damage-overlay');\r\n\r\nfunction flashRed() {\r\n    overlay.style.opacity = '0.8';\r\n\r\n    setTimeout(() => {\r\n        overlay.style.opacity = '0';\r\n        overlay.classList.add('fade-out');\r\n        setTimeout(() => {\r\n            overlay.classList.remove('fade-out');\r\n        },1000);\r\n    }, 200);\r\n}\r\n\r\nexport { flashRed };","// File to manage all the sounds in the game\r\n\r\nimport * as THREE from 'three';\r\n\r\n// ------------------- Variables -------------------\r\n\r\n// Listener and audio loader\r\nconst listener = new THREE.AudioListener();\r\nconst audioLoader = new THREE.AudioLoader();\r\n\r\n// Background music\r\nconst exteriorBackgroundMusic = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/abadoned-pyramid-atmo-orchestral-and-drone-sad-mood-9237.mp3', (buffer) => {\r\n    exteriorBackgroundMusic.setBuffer(buffer);\r\n    exteriorBackgroundMusic.setLoop(true);\r\n    exteriorBackgroundMusic.setVolume(0.1);\r\n});\r\n\r\n// Sound effects\r\nconst scaryViolins = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/scaryviolins-6829.mp3', (buffer) => {\r\n    scaryViolins.setBuffer(buffer);\r\n    scaryViolins.setLoop(true);\r\n    scaryViolins.setVolume(0.8);\r\n});\r\n\r\nconst shepardTone = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/shepard-effect-edit.mp3', (buffer) => {\r\n    shepardTone.setBuffer(buffer);\r\n    shepardTone.setLoop(true);\r\n    shepardTone.setVolume(0.6);\r\n});\r\n\r\nconst biteScarySound = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/cringe-scare-47561.mp3', (buffer) => {\r\n    biteScarySound.setBuffer(buffer);\r\n    biteScarySound.setVolume(0.2);\r\n});\r\n\r\nconst biteSound = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/zombie-bite-96528.mp3', (buffer) => {\r\n    biteSound.setBuffer(buffer);\r\n    biteSound.setVolume(0.5);\r\n});\r\n\r\nconst paperSound = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/paper-245786.mp3', (buffer) => {\r\n    paperSound.setBuffer(buffer);\r\n    paperSound.setVolume(0.5);\r\n});\r\n\r\nconst doorSound = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/closing-metal-door-44280.mp3', (buffer) => {\r\n    doorSound.setBuffer(buffer);\r\n    doorSound.setVolume(0.5);\r\n});\r\n\r\nconst lockedDoorSound = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/door-close-79921.mp3', (buffer) => {\r\n    lockedDoorSound.setBuffer(buffer);\r\n    lockedDoorSound.setVolume(0.4);\r\n});\r\n\r\nconst corpseNoise = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/dropping-bag-95101.mp3', (buffer) => {\r\n    corpseNoise.setBuffer(buffer);\r\n    corpseNoise.setVolume(0.5);\r\n});\r\n\r\nconst footsteps = new THREE.Audio(listener);\r\naudioLoader.load('assets/sounds/footsteps.mp3', (buffer) => {\r\n    footsteps.setBuffer(buffer);\r\n    footsteps.setVolume(0.4);\r\n    footsteps.setLoop(true);\r\n});\r\n\r\n// Positionnal sound effects\r\nconst infectedSound = new THREE.PositionalAudio(listener);\r\naudioLoader.load('assets/sounds/zombie-1-22336.mp3', (buffer) => {\r\n    infectedSound.setBuffer(buffer);\r\n    infectedSound.setLoop(true);\r\n    infectedSound.setRefDistance(20);\r\n    infectedSound.setVolume(0.3);\r\n});\r\n\r\nconst lampSound = new THREE.PositionalAudio(listener);\r\naudioLoader.load('assets/sounds/fluorescent-lamp-flickering-17625.mp3', (buffer) => {\r\n    lampSound.setBuffer(buffer);\r\n    lampSound.setRefDistance(3);\r\n    lampSound.setVolume(0.9);\r\n    lampSound.setLoop(true);\r\n});\r\n\r\n// ------------------- Functions -------------------\r\n\r\nfunction addListenerToCamera(camera) {\r\n    camera.add(listener);\r\n}\r\n\r\nfunction addSoundToInfected(infected) {\r\n    infected.add(infectedSound);\r\n}\r\n\r\nfunction addSoundToLamp(lamp) {\r\n    lamp.add(lampSound);\r\n    lampSound.play();\r\n}\r\n\r\nfunction playExteriorBackgroundMusic() {\r\n    exteriorBackgroundMusic.play();\r\n}\r\n\r\nfunction stopBackgroundMusic() {\r\n    exteriorBackgroundMusic.stop();\r\n    // TODO: Add other background music stop here\r\n}\r\n\r\nfunction playBiteSound() {\r\n    biteSound.play();\r\n    biteScarySound.play();\r\n}\r\n\r\nfunction playInfectedChase() {\r\n    stopBackgroundMusic();\r\n    scaryViolins.play();\r\n    shepardTone.play();\r\n    infectedSound.play();\r\n}\r\n\r\nfunction stopInfectedChase() {\r\n    scaryViolins.stop();\r\n    shepardTone.stop();\r\n    infectedSound.stop();\r\n    playBiteSound();\r\n    playExteriorBackgroundMusic();\r\n}\r\n\r\nfunction playPaperSound() {\r\n    paperSound.play();\r\n}\r\n\r\nfunction playDoorSound() {\r\n    doorSound.play();\r\n}\r\n\r\nfunction playLockedDoorSound() {\r\n    lockedDoorSound.play();\r\n}\r\n\r\nfunction playCorpseNoise() {\r\n    corpseNoise.play();\r\n}\r\n\r\nfunction playFootsteps() {\r\n    if (!footsteps.isPlaying) {\r\n        footsteps.play();\r\n    }\r\n}\r\n\r\nfunction pauseFootsteps() {\r\n    footsteps.pause();\r\n}\r\n\r\n// ------------------- Export -------------------\r\n\r\nexport {\r\n    addListenerToCamera, playExteriorBackgroundMusic, stopBackgroundMusic,\r\n    playInfectedChase, stopInfectedChase, playBiteSound, addSoundToInfected, playPaperSound,\r\n    playDoorSound, playLockedDoorSound, playCorpseNoise, playFootsteps, pauseFootsteps,\r\n    addSoundToLamp\r\n};","// File for the infected model\r\n\r\nimport * as THREE from 'three';\r\nimport { flashRed } from '../utils/shake-camera';\r\nimport { addSoundToInfected, stopInfectedChase } from '../utils/sounds';\r\n\r\nlet model, mixer;\r\n\r\nlet idleAction, walkAction, walkWithArmsAction, runAction, attackAction, fallBackwardAction, fallForwardAction;\r\nlet actions;\r\n\r\nlet isFallingBack = false;\r\nlet isDead = false;\r\nconst infectedSpeed = 2;\r\n\r\n// Dialogue\r\nconst infectedBite = document.getElementById('infected-bite');\r\n\r\n// Animations names:\r\n// NOT USEFUL (animations that move the character on their own):\r\n// walk with arms: Walk\r\n// walk: Walk1\r\n// run: Run\r\n\r\n// USEFUL (animations that don't move the character position):\r\n// idle: Idle\r\n// walk in place: Walk1_InPlace\r\n// walk in place with arms: Walk2_InPlace\r\n// run in place: Run_InPlace\r\n// attack: Attack\r\n// falling back: FallingBack\r\n// falling forward: FallingForward\r\n\r\n\r\nfunction loadInfected(infectedFile, loader, scene, state = \"Run_InPlace\") {\r\n    loader.load(infectedFile, (gltf) => {\r\n        model = gltf.scene;\r\n\r\n        // Manual positioning\r\n        model.position.x = -19;\r\n        model.position.z = 1.5;\r\n\r\n        // Sound for the infected\r\n        addSoundToInfected(model);\r\n\r\n        scene.add(model);\r\n\r\n        model.traverse(function (object) {\r\n            if (object.isMesh) object.castShadow = true;\r\n        });\r\n\r\n        const animations = gltf.animations;\r\n\r\n        mixer = new THREE.AnimationMixer(model);\r\n\r\n        idleAction = mixer.clipAction(animations[0]);\r\n        walkAction = mixer.clipAction(animations[1]);\r\n        walkWithArmsAction = mixer.clipAction(animations[2]);\r\n        runAction = mixer.clipAction(animations[3]);\r\n        attackAction = mixer.clipAction(animations[4]);\r\n        fallBackwardAction = mixer.clipAction(animations[5]);\r\n        fallForwardAction = mixer.clipAction(animations[6]);\r\n\r\n        actions = [idleAction, walkAction, walkWithArmsAction, runAction, attackAction, fallBackwardAction, fallForwardAction];\r\n\r\n        if (state === 'Idle') {\r\n            idleAction.play();\r\n        }\r\n        else if (state === 'Walk1_InPlace') {\r\n            walkAction.play();\r\n        }\r\n        else if (state === 'Walk2_InPlace') {\r\n            walkWithArmsAction.play();\r\n        }\r\n        else if (state === 'Run_InPlace') {\r\n            runAction.play();\r\n        }\r\n        else if (state === 'Attack') {\r\n            attackAction.play();\r\n        }\r\n    });\r\n}\r\n\r\n// Animation transitions\r\nfunction fromIdleToWalk() {\r\n    prepareCrossFade(idleAction, walkAction, 0.5);\r\n}\r\nfunction fromWalkToRun() {\r\n    prepareCrossFade(walkAction, runAction, 2.5);\r\n}\r\nfunction fromWalkToWalkWithArms() {\r\n    prepareCrossFade(idleAction, walkWithArmsAction, 0.5);\r\n}\r\nfunction fromIdleToWalkWithArms() {\r\n    prepareCrossFade(idleAction, walkWithArmsAction, 0.5);\r\n}\r\nfunction fromWalkWithArmsToRun() {\r\n    prepareCrossFade(walkWithArmsAction, runAction, 2.5);\r\n}\r\nfunction fromRunToWalk() {\r\n    prepareCrossFade(runAction, walkAction, 5.0);\r\n}\r\nfunction fromRunToWalkWithArms() {\r\n    prepareCrossFade(runAction, walkWithArmsAction, 5.0);\r\n}\r\nfunction fromWalkToIdle() {\r\n    prepareCrossFade(walkAction, idleAction, 1.0);\r\n}\r\nfunction fromWalkWithArmsToIdle() {\r\n    prepareCrossFade(walkWithArmsAction, idleAction, 1.0);\r\n}\r\nfunction fromRunTofallBack() {\r\n    runAction.stop();\r\n    fallBackwardAction.loop = THREE.LoopOnce;\r\n    fallBackwardAction.clampWhenFinished = true;\r\n    fallBackwardAction.play();\r\n}\r\n\r\nfunction prepareCrossFade(startAction, endAction, duration) {\r\n    // If the current action is 'idle' (duration 4 sec), execute the crossfade immediately;\r\n    // else wait until the current action has finished its current loop\r\n\r\n    if (startAction === idleAction) {\r\n        executeCrossFade(startAction, endAction, duration);\r\n    }\r\n    else {\r\n        synchronizeCrossFade(startAction, endAction, duration);\r\n    }\r\n}\r\n\r\nfunction synchronizeCrossFade(startAction, endAction, duration) {\r\n    mixer.addEventListener('loop', onLoopFinished);\r\n    function onLoopFinished(event) {\r\n        if (event.action === startAction) {\r\n            mixer.removeEventListener('loop', onLoopFinished);\r\n            executeCrossFade(startAction, endAction, duration);\r\n        }\r\n    }\r\n}\r\n\r\nfunction executeCrossFade(startAction, endAction, duration) {\r\n    // Not only the start action, but also the end action must get a weight of 1 before fading\r\n    // (concerning the start action this is already guaranteed in this place)\r\n    setWeight(endAction, 1);\r\n    endAction.time = 0;\r\n\r\n    // Crossfade with warping - you can also try without warping by setting the third parameter to false\r\n    startAction.crossFadeTo(endAction, duration, true);\r\n}\r\n\r\n// This function is needed, since animationAction.crossFadeTo() disables its start action and sets\r\n// the start action's timeScale to ((start animation's duration) / (end animation's duration))\r\n\r\nfunction setWeight(action, weight) {\r\n    action.enabled = true;\r\n    action.setEffectiveWeight(weight);\r\n    if (!action.isRunning()) {\r\n        action.play();\r\n    }\r\n}\r\n\r\nfunction infectedLoop(deltaTime, playerCollider) {\r\n    if (!model) {\r\n        return;\r\n    }\r\n    if (isDead) {\r\n        return;\r\n    }\r\n    // Check for collision with player\r\n    if (playerCollider.start.distanceTo(model.position) < 2 && !isFallingBack) {\r\n        stopInfectedChase();\r\n        fromRunTofallBack();\r\n        flashRed();\r\n        isFallingBack = true;\r\n        return;\r\n    }\r\n\r\n    if (isFallingBack) {\r\n        if (mixer) {\r\n            mixer.update(deltaTime);\r\n            if (!fallBackwardAction.isRunning()) {\r\n                isFallingBack = false;\r\n                isDead = true;\r\n                console.log(\"Infected is dead\");\r\n                infectedBite.style.visibility = 'visible';\r\n                setTimeout(() => {\r\n                    infectedBite.style.visibility = 'hidden';\r\n                }, 5000);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    if (mixer) {\r\n        mixer.update(deltaTime);\r\n    }\r\n    const playerPosition = playerCollider.end;\r\n    const direction = new THREE.Vector3();\r\n\r\n    // only X and Z vectors are needed\r\n    direction.subVectors(new THREE.Vector3(playerPosition.x, model.position.y, playerPosition.z), model.position).normalize();\r\n\r\n    model.position.add(direction.multiplyScalar(infectedSpeed * deltaTime));\r\n\r\n    const lookAt = new THREE.Vector3(playerPosition.x, model.position.y, playerPosition.z);\r\n    model.lookAt(lookAt);\r\n}\r\n\r\nfunction removeInfected() {\r\n    if (mixer) {\r\n        mixer.stopAllAction();\r\n        mixer.uncacheRoot(model);\r\n        mixer = null;\r\n    }\r\n\r\n    if (model) {\r\n        model.traverse((object) => {\r\n            if (object.isMesh) {\r\n                object.geometry.dispose();\r\n                if (object.material.isMaterial) {\r\n                    object.material.dispose();\r\n                } else if (Array.isArray(object.material)) {\r\n                    object.material.forEach((material) => material.dispose());\r\n                }\r\n            }\r\n        });\r\n\r\n        if (model.parent) {\r\n            model.parent.remove(model);\r\n        }\r\n\r\n        model = null;\r\n    }\r\n\r\n    // Reset states\r\n    isDead = false;\r\n    isFallingBack = false;\r\n}\r\n\r\n\r\nexport {\r\n    loadInfected, fromIdleToWalk, fromWalkToRun,\r\n    fromWalkToWalkWithArms, fromIdleToWalkWithArms, fromWalkWithArmsToRun,\r\n    fromRunToWalk, fromRunToWalkWithArms, fromWalkToIdle,\r\n    fromWalkWithArmsToIdle, infectedLoop, removeInfected\r\n};","import { spawnInfected } from \"../main\";\r\nimport { getKey, removeCodeTrigger } from \"../scenes/exterior\";\r\nimport { playInfectedChase } from \"./sounds\";\r\n\r\nconst validCode = \"2231\";\r\n\r\nconst codeInput = document.getElementById('code-input');\r\nconst solvedCodeText = document.getElementById('solved-code-text');\r\n\r\n\r\nfunction clearCode() {\r\n    codeInput.innerText = '';\r\n    removeCodeListener();\r\n}\r\n\r\nfunction checkCode() {\r\n    if (codeInput.innerText === validCode) {\r\n        return true;\r\n    }\r\n    if (codeInput.innerText.length === 4) {\r\n        codeInput.innerText = '';\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction addDigit(digit) {\r\n    if (codeInput.innerText.length < 4) {\r\n        codeInput.innerText += digit;\r\n    }\r\n}\r\n\r\nfunction keyHandler(event) {\r\n    if (event.key >= '0' && event.key <= '9') {\r\n        addDigit(event.key);\r\n    }\r\n    if (event.key === 'Enter') {\r\n        if (checkCode()) {\r\n            console.log('Code accepted');\r\n            codeInput.innerText = 'Correct!';\r\n            solvedCodeText.style.visibility = 'visible';\r\n            getKey();\r\n            spawnInfected();\r\n            playInfectedChase();\r\n            setTimeout(() => {\r\n                removeCodeTrigger();\r\n                codeInput.innerText = '';\r\n                solvedCodeText.style.visibility = 'hidden';\r\n            }, 3000);\r\n        } else {\r\n            console.log('Code rejected');\r\n            codeInput.innerText = 'Wrong!';\r\n            setTimeout(() => {\r\n                codeInput.innerText = '';\r\n            }, 1000);\r\n        }\r\n    }\r\n}\r\n\r\nfunction useCode() {\r\n    document.addEventListener('keyup', keyHandler);\r\n}\r\n\r\nfunction removeCodeListener() {\r\n    document.removeEventListener('keyup', keyHandler);\r\n}\r\n\r\n\r\nexport { checkCode, clearCode, addDigit, useCode };","// File for the exterior scene of the game.\r\n\r\nimport * as THREE from 'three';\r\n\r\nimport { loadNewRoom } from '../main';\r\nimport { clearCode, useCode } from '../utils/digits-code';\r\nimport { addSoundToLamp, playCorpseNoise, playDoorSound, playLockedDoorSound, playPaperSound } from '../utils/sounds';\r\n\r\n// ------------------- Variables -------------------\r\n\r\n// Flag to track if the door key has been found\r\nlet doorKeyFound = false;\r\n\r\n// Flags to track if player is inside the trigger\r\nlet playerInDoorTriggerZone = false;\r\nlet playerInCorpseTriggerZone = false;\r\nlet playerInCodeTriggerZone = false;\r\nlet playerInFileTriggerZone = false;\r\nlet playerInReportTriggerZone = false;\r\nlet playerInCharlesNoteTriggerZone = false;\r\n\r\n// Door trigger\r\nconst doorTrigger = new THREE.Box3(\r\n    // Min corner (xMin, yMin, zMin)\r\n    new THREE.Vector3(-7.55, 0, -5.5),\r\n    // Max corner (xMax, yMax, zMax)\r\n    new THREE.Vector3(-5, 3, 0.5)\r\n);\r\n\r\nconst corpseTrigger = new THREE.Box3(\r\n    new THREE.Vector3(-31, 0, -28),\r\n    new THREE.Vector3(-29, 3, -24)\r\n);\r\n\r\n// Code trigger\r\nconst codeTrigger = new THREE.Box3(\r\n    new THREE.Vector3(-37, 0, 0),\r\n    new THREE.Vector3(-33, 3, 3.5)\r\n);\r\n\r\n// File trigger\r\nconst fileTrigger = new THREE.Box3(\r\n    new THREE.Vector3(-13, 0, -60),\r\n    new THREE.Vector3(-10.5, 3, -57)\r\n);\r\n\r\n// Report trigger\r\nconst reportTrigger = new THREE.Box3(\r\n    new THREE.Vector3(-8, 0, -10),\r\n    new THREE.Vector3(-5, 3, -7.5)\r\n);\r\n\r\n// Charles note trigger\r\nconst charlesNoteTrigger = new THREE.Box3(\r\n    new THREE.Vector3(-22, 0, 0.6),\r\n    new THREE.Vector3(-19, 3, 3.5)\r\n);\r\n\r\n// -------------------------------- GUI --------------------------------\r\n\r\n// Texts for interactions\r\nconst doorText = document.getElementById('door-text');\r\nconst corpseText = document.getElementById('corpse-text');\r\nconst fileText = document.getElementById('file-text');\r\nconst reportText = document.getElementById('report-text');\r\nconst charlesNoteText = document.getElementById('charles-note-text');\r\nconst codeText = document.getElementById('code-text');\r\n\r\n// Examines\r\nconst doorExam = document.getElementById('door-exam');\r\nconst corpseExam = document.getElementById('corpse-exam');\r\n\r\n// Images\r\nconst corpseTimeline = document.getElementById('corpse-timeline');\r\nconst report = document.getElementById('report');\r\nconst charlesNote = document.getElementById('charles-note');\r\nconst fadedScreen = document.getElementById('faded-screen');\r\n\r\n// Ensure the images are hidden by default\r\ncorpseTimeline.style.visibility = \"hidden\";\r\nreport.style.visibility = \"hidden\";\r\ncharlesNote.style.visibility = \"hidden\";\r\n\r\n// Function called when the player interacts with \"E\"\r\nfunction interact() {\r\n    if (playerInDoorTriggerZone) {\r\n        if (doorKeyFound) {\r\n            hideDoorText();\r\n            playDoorSound();\r\n            loadNewRoom(\"reception\");\r\n            playerInDoorTriggerZone = false;\r\n        }\r\n        else {\r\n            playLockedDoorSound();\r\n            showDoorExam();\r\n        }\r\n    }\r\n    if (playerInCorpseTriggerZone) {\r\n        playCorpseNoise();\r\n        showCorpseExam();\r\n    }\r\n    if (playerInFileTriggerZone) {\r\n        if (corpseTimeline.style.visibility === \"hidden\") {\r\n            playPaperSound();\r\n            showFile();\r\n            hideFileText();\r\n        }\r\n        else {\r\n            hideFile();\r\n            showFileText();\r\n        }\r\n    }\r\n    if (playerInReportTriggerZone) {\r\n        if (report.style.visibility === \"hidden\") {\r\n            playPaperSound();\r\n            showReport();\r\n            hideReportText();\r\n        }\r\n        else {\r\n            hideReport();\r\n            showReportText();\r\n        }\r\n    }\r\n    if (playerInCharlesNoteTriggerZone) {\r\n        if (charlesNote.style.visibility === \"hidden\") {\r\n            playPaperSound();\r\n            showCharlesNote();\r\n            hideCharlesNoteText();\r\n        }\r\n        else {\r\n            hideCharlesNote();\r\n            showCharlesNoteText();\r\n        }\r\n    }\r\n}\r\n\r\n// Door functions\r\nfunction showDoorExam() {\r\n    doorExam.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideDoorExam() {\r\n    doorExam.style.visibility = \"hidden\";\r\n}\r\n\r\nfunction showDoorText() {\r\n    doorText.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideDoorText() {\r\n    doorText.style.visibility = \"hidden\";\r\n}\r\n\r\n// Corpse functions\r\nfunction showCorpseExam() {\r\n    corpseExam.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideCorpseExam() {\r\n    corpseExam.style.visibility = \"hidden\";\r\n}\r\n\r\nfunction showCorpseText() {\r\n    corpseText.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideCorpseText() {\r\n    corpseText.style.visibility = \"hidden\";\r\n}\r\n\r\n// File functions\r\nfunction showFile() {\r\n    corpseTimeline.style.visibility = \"visible\";\r\n    fadedScreen.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideFile() {\r\n    corpseTimeline.style.visibility = \"hidden\";\r\n    fadedScreen.style.visibility = \"hidden\";\r\n}\r\n\r\nfunction showFileText() {\r\n    fileText.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideFileText() {\r\n    fileText.style.visibility = \"hidden\";\r\n}\r\n\r\n// Report functions\r\nfunction showReport() {\r\n    report.style.visibility = \"visible\";\r\n    fadedScreen.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideReport() {\r\n    report.style.visibility = \"hidden\";\r\n    fadedScreen.style.visibility = \"hidden\";\r\n}\r\n\r\nfunction showReportText() {\r\n    reportText.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideReportText() {\r\n    reportText.style.visibility = \"hidden\";\r\n}\r\n\r\n// Charles note functions\r\nfunction showCharlesNote() {\r\n    charlesNote.style.visibility = \"visible\";\r\n    fadedScreen.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideCharlesNote() {\r\n    charlesNote.style.visibility = \"hidden\";\r\n    fadedScreen.style.visibility = \"hidden\";\r\n}\r\n\r\nfunction showCharlesNoteText() {\r\n    charlesNoteText.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideCharlesNoteText() {\r\n    charlesNoteText.style.visibility = \"hidden\";\r\n}\r\n\r\n// Code functions\r\nfunction showCodeText() {\r\n    codeText.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideCodeText() {\r\n    codeText.style.visibility = \"hidden\";\r\n}\r\n\r\nfunction removeCodeTrigger() {\r\n    codeTrigger.makeEmpty();\r\n}\r\n\r\n// ------------------- Functions -------------------\r\n\r\n// Function called when the player finds the door key\r\nfunction getKey() {\r\n    doorKeyFound = true;\r\n}\r\n\r\n// Triggers function\r\nfunction exteriorTriggers(playerBox) {\r\n    // Check for door trigger collision\r\n    if (playerBox.intersectsBox(doorTrigger)) {\r\n        if (!playerInDoorTriggerZone) {\r\n            console.log(\"Entered the door trigger zone\");\r\n            showDoorText();\r\n            playerInDoorTriggerZone = true;\r\n        }\r\n    }\r\n    else {\r\n        if (playerInDoorTriggerZone) {\r\n            console.log(\"Exited the door trigger zone\");\r\n            hideDoorText();\r\n            hideDoorExam();\r\n            playerInDoorTriggerZone = false;\r\n        }\r\n    }\r\n\r\n    // Check for corpse trigger collision\r\n    if (playerBox.intersectsBox(corpseTrigger)) {\r\n        if (!playerInCorpseTriggerZone) {\r\n            console.log(\"Entered the corpse trigger zone\");\r\n            showCorpseText();\r\n            playerInCorpseTriggerZone = true;\r\n        }\r\n    }\r\n    else {\r\n        if (playerInCorpseTriggerZone) {\r\n            console.log(\"Exited the corpse trigger zone\");\r\n            hideCorpseText();\r\n            hideCorpseExam();\r\n            playerInCorpseTriggerZone = false;\r\n        }\r\n    }\r\n\r\n    // Check for code trigger collision\r\n    if (playerBox.intersectsBox(codeTrigger)) {\r\n        if (!playerInCodeTriggerZone) {\r\n            console.log(\"Entered the code trigger zone\");\r\n            showCodeText();\r\n            useCode();\r\n            playerInCodeTriggerZone = true;\r\n        }\r\n    }\r\n    else {\r\n        if (playerInCodeTriggerZone) {\r\n            console.log(\"Exited the code trigger zone\");\r\n            hideCodeText();\r\n            clearCode();\r\n            playerInCodeTriggerZone = false;\r\n        }\r\n    }\r\n\r\n    // Check for file trigger collision\r\n    if (playerBox.intersectsBox(fileTrigger)) {\r\n        if (!playerInFileTriggerZone) {\r\n            console.log(\"Entered the file trigger zone\");\r\n            showFileText();\r\n            playerInFileTriggerZone = true;\r\n        }\r\n    }\r\n    else {\r\n        if (playerInFileTriggerZone) {\r\n            console.log(\"Exited the file trigger zone\");\r\n            hideFileText();\r\n            hideFile();\r\n            playerInFileTriggerZone = false;\r\n        }\r\n    }\r\n\r\n    // Check for report trigger collision\r\n    if (playerBox.intersectsBox(reportTrigger)) {\r\n        if (!playerInReportTriggerZone) {\r\n            console.log(\"Entered the report trigger zone\");\r\n            showReportText();\r\n            playerInReportTriggerZone = true;\r\n        }\r\n    }\r\n    else {\r\n        if (playerInReportTriggerZone) {\r\n            console.log(\"Exited the report trigger zone\");\r\n            hideReportText();\r\n            hideReport();\r\n            playerInReportTriggerZone = false;\r\n        }\r\n    }\r\n\r\n    // Check for Charles note trigger collision\r\n    if (playerBox.intersectsBox(charlesNoteTrigger)) {\r\n        if (!playerInCharlesNoteTriggerZone) {\r\n            console.log(\"Entered the Charles note trigger zone\");\r\n            showCharlesNoteText();\r\n            playerInCharlesNoteTriggerZone = true;\r\n        }\r\n    }\r\n    else {\r\n        if (playerInCharlesNoteTriggerZone) {\r\n            console.log(\"Exited the Charles note trigger zone\");\r\n            hideCharlesNoteText();\r\n            hideCharlesNote();\r\n            playerInCharlesNoteTriggerZone = false;\r\n        }\r\n    }\r\n}\r\n\r\n// ------------------- Neon Light -------------------\r\n\r\nconst neonLight = new THREE.PointLight(0xffffff, 20)\r\nneonLight.position.set(-8, 2.4, -60)\r\n\r\nfunction loadNeonLight(scene) {\r\n    // Add sound effect\r\n    addSoundToLamp(neonLight);\r\n    \r\n    scene.add(neonLight)\r\n}\r\n\r\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * max);\r\n}\r\n\r\nfunction flickerNeonLight() {\r\n    if (neonLight.visible) {\r\n        if (getRandomInt(320) == 1) {\r\n            neonLight.visible = false;\r\n        }\r\n    }\r\n\r\n    if (!neonLight.visible) {\r\n        if (getRandomInt(40) == 1) {\r\n            neonLight.visible = true;\r\n        }\r\n    }\r\n}\r\n\r\nexport { interact, exteriorTriggers, removeCodeTrigger, loadNeonLight, flickerNeonLight, getKey };","// File for the infected model\r\n\r\nimport * as THREE from 'three';\r\n\r\nlet model, mixer;\r\n\r\nlet idleAction;\r\n\r\n// Animations names:\r\n// static zombie: Armature|mixamo.com|Layer0\r\n\r\nfunction loadIdleInfected(infectedFile, loader, scene, position = new THREE.Vector3(0, 0, -8), rotation = new THREE.Vector3(0, 0, 0)) {\r\n    loader.load(infectedFile, (gltf) => {\r\n        model = gltf.scene;\r\n\r\n        model.scale.set(0.6, 0.6, 0.6);\r\n        // temporary manual positioning\r\n        model.position.set(position.x, position.y, position.z)\r\n        model.rotation.set(rotation.x, rotation.y, rotation.z)\r\n        \r\n        scene.add(model);\r\n\r\n        model.traverse(function (object) {\r\n            if (object.isMesh) object.castShadow = true;\r\n        });\r\n\r\n        const animations = gltf.animations;\r\n\r\n        mixer = new THREE.AnimationMixer(model);\r\n\r\n        idleAction = mixer.clipAction(animations[0]);\r\n        idleAction.play();\r\n    });\r\n}\r\n\r\nfunction restartAnimation() {\r\n    idleAction.stop();\r\n    idleAction.play();\r\n}\r\n\r\nfunction idleInfectedLoop(deltaTime) {\r\n    if (mixer) {\r\n        mixer.update(deltaTime);\r\n    }\r\n}\r\n\r\nexport { loadIdleInfected, restartAnimation, idleInfectedLoop };","const blackScreenElement = document.getElementById('blackscreen');\r\nconst introText = document.getElementById('intro-text');\r\n\r\nfunction showIntroduction() {\r\n    blackScreenElement.style.visibility = \"visible\";\r\n    introText.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideIntroduction() {\r\n    blackScreenElement.style.visibility = \"hidden\";\r\n    introText.style.visibility = \"hidden\";\r\n}\r\n\r\nfunction waitForAnyKey(callback) {\r\n    function onKeyDown(event) {\r\n      window.removeEventListener(\"keydown\", onKeyDown);\r\n      if (callback) {\r\n        callback(event);\r\n      }\r\n    }\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n  }\r\n\r\nexport { showIntroduction, hideIntroduction, waitForAnyKey };","// File for the interior scene of the game.\r\n\r\nimport * as THREE from 'three';\r\n\r\nimport { loadNewRoom } from '../main';\r\n\r\n// -------------------------------- GUI --------------------------------\r\n\r\nconst drawer1Text = document.getElementById('drawer1-text');\r\nconst drawer2Text = document.getElementById('drawer2-text');\r\nconst goodDrawerText = document.getElementById('gooddrawer-text');\r\n\r\nconst badText = document.getElementById('bad-text');\r\nconst goodText = document.getElementById('good-text');\r\nconst searchedText = document.getElementById('searched-text');\r\n\r\nconst useCardText = document.getElementById('useCard-text');\r\nconst dontOpenText = document.getElementById('dontOpen-text');\r\nconst openText = document.getElementById('Open-text');\r\n\r\nlet playerInDrawer1TriggerZone = false;\r\nlet playerInDrawer2TriggerZone = false;\r\nlet playerInGoodDrawerTriggerZone = false;\r\nlet playerInRightDoorTriggerZone = false;\r\nlet playerInLeftDoorTriggerZone = false;\r\nlet animateDrawer = false;\r\nlet itemsOn = false;\r\nlet leftDoorOpen = false; \r\nlet model;\r\n\r\nfunction showMessage() {\r\n    if (playerInDrawer1TriggerZone) {\r\n        hideText(drawer1Text)\r\n        displayText(badText);\r\n    }\r\n    if (playerInDrawer2TriggerZone) {\r\n        hideText(drawer2Text)\r\n        displayText(badText);\r\n    }\r\n    if (playerInGoodDrawerTriggerZone & !itemsOn) {\r\n        hideText(goodDrawerText);\r\n        animateDrawer = true;\r\n        displayText(goodText);\r\n        itemsOn = true;\r\n    }\r\n    else if (playerInGoodDrawerTriggerZone & itemsOn & goodText.style.visibility == \"hidden\") {\r\n        hideText(goodDrawerText);\r\n        displayText(searchedText);\r\n    }\r\n    if (playerInRightDoorTriggerZone){\r\n        hideText(useCardText);\r\n        displayText(dontOpenText);\r\n    }\r\n    if (playerInLeftDoorTriggerZone){\r\n        hideText(useCardText);\r\n        leftDoorOpen = true;\r\n    }\r\n}\r\nfunction hideMessage() {\r\n    if (playerInDrawer1TriggerZone | playerInDrawer2TriggerZone) {\r\n        hideText(badText);\r\n    }\r\n    if (playerInGoodDrawerTriggerZone) {\r\n        hideText(goodText);\r\n        hideText(searchedText);\r\n    }\r\n    if (playerInRightDoorTriggerZone){\r\n        hideText(dontOpenText);\r\n    }\r\n    if (playerInLeftDoorTriggerZone){\r\n        hideText(openText);\r\n    }\r\n}\r\n\r\nfunction displayText(object) {\r\n    object.style.visibility = \"visible\";\r\n}\r\n\r\nfunction hideText(object) {\r\n    object.style.visibility = \"hidden\";\r\n}\r\n\r\n// ------------------- Trigger Function -------------------\r\n\r\nconst interiorDoorTrigger = new THREE.Box3(\r\n    new THREE.Vector3(3.3, 0, 4.),\r\n    new THREE.Vector3(6.1, 2.8, 4.6)\r\n)\r\n\r\nconst drawer1Trigger = new THREE.Box3(\r\n    new THREE.Vector3(1.5, 0, -2.5),\r\n    new THREE.Vector3(2.5, 2, -1.5)\r\n)\r\n\r\nconst drawer2Trigger = new THREE.Box3(\r\n    new THREE.Vector3(-1.7, 0, -1.75),\r\n    new THREE.Vector3(-0.7, 2, -0.75)\r\n)\r\n\r\nconst goodDrawerTrigger = new THREE.Box3(\r\n    new THREE.Vector3(-0.25, 0, -1.5),\r\n    new THREE.Vector3(0.75, 2, -0.5)\r\n)\r\n\r\nconst rightDoorTrigger = new THREE.Box3(\r\n    new THREE.Vector3(4.35, 0, -4.6),\r\n    new THREE.Vector3(5.85, 2, -4.2)\r\n)\r\n\r\nconst leftDoorTrigger = new THREE.Box3(\r\n    new THREE.Vector3(-5.5, 0, -4.6),\r\n    new THREE.Vector3(-4, 2, -4.2)\r\n)\r\n\r\n// const doorTriggerSize = new THREE.Vector3();\r\n// interiorDoorTrigger.getSize(doorTriggerSize);\r\n\r\n// const doorTriggerMesh = new THREE.Mesh(\r\n//     new THREE.BoxGeometry(doorTriggerSize.x, doorTriggerSize.y, doorTriggerSize.z), // Size of the box\r\n//     new THREE.MeshBasicMaterial({ color: 0xff0000, wireframe: true }) // Red wireframe material for visualization\r\n// );\r\n\r\n//doorTriggerMesh.position.copy(interiorDoorTrigger.getCenter(new THREE.Vector3()));\r\n\r\nfunction intersectobject(playerBox, Trigger, inTrigger, text)\r\n{\r\n    if (playerBox.intersectsBox(Trigger)) {\r\n        if (!inTrigger) {\r\n            console.log(\"Entered the trigger zone\");\r\n            displayText(text);\r\n            return true;\r\n        }\r\n    }\r\n    else {\r\n        if (inTrigger) {\r\n            console.log(\"Exited the trigger zone\");\r\n            hideText(text);\r\n            hideMessage(text);\r\n            return false;\r\n        }\r\n    }\r\n    return inTrigger\r\n}\r\n\r\nfunction loadDrawer(drawer, loader, scene) {\r\n    loader.load(drawer, (gltf) => {\r\n        model = gltf.scene;\r\n\r\n        model.scale.set(2.3, 1.778, 1);\r\n        model.position.set(0.2, 0.739, -0.571);\r\n        model.rotation.y += Math.PI;\r\n\r\n        scene.add(model);\r\n    });\r\n}\r\n\r\nfunction receptionTriggers(playerBox) {\r\n    // Check for door trigger collision\r\n    if (playerBox.intersectsBox(interiorDoorTrigger)) {\r\n        loadNewRoom(\"exterior\");\r\n    }\r\n    if (playerBox.intersectsBox(leftDoorTrigger) & leftDoorOpen == true) {\r\n        loadNewRoom(\"corridor\");\r\n    }\r\n    playerInDrawer1TriggerZone = intersectobject(playerBox, drawer1Trigger, playerInDrawer1TriggerZone, drawer1Text)\r\n    playerInDrawer2TriggerZone = intersectobject(playerBox, drawer2Trigger, playerInDrawer2TriggerZone, drawer2Text)\r\n    playerInGoodDrawerTriggerZone = intersectobject(playerBox, goodDrawerTrigger, playerInGoodDrawerTriggerZone, goodDrawerText)\r\n    playerInRightDoorTriggerZone = intersectobject(playerBox, rightDoorTrigger, playerInRightDoorTriggerZone, useCardText)\r\n    playerInLeftDoorTriggerZone = intersectobject(playerBox, leftDoorTrigger, playerInLeftDoorTriggerZone, useCardText)\r\n\r\n    if (animateDrawer) {\r\n        if (model.position.z > -0.9){\r\n            model.position.z -= 0.01;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport { loadDrawer, receptionTriggers, showMessage };","// File for the interior scene of the game.\r\n\r\nimport * as THREE from 'three';\r\n\r\nimport { loadNewRoom } from '../main';\r\n\r\n// -------------------------------- GUI --------------------------------\r\nconst openDoor = document.getElementById('openDoor-text');\r\nconst closedDoor = document.getElementById('closedDoor-text');\r\nconst zombieDoor = document.getElementById('zombieDoor-text');\r\n\r\nlet playerInBadDoorTriggerZone = false;\r\nlet playerInZombieDoorTriggerZone = false;\r\nlet playerInGoodDoorTriggerZone = false;\r\n\r\nfunction showCorridorMessage() {\r\n    if (playerInBadDoorTriggerZone) {\r\n        hideText(openDoor)\r\n        displayText(closedDoor);\r\n    }\r\n    if (playerInGoodDoorTriggerZone) {\r\n        hideText(openDoor);\r\n    }\r\n    if (playerInZombieDoorTriggerZone) {\r\n        hideText(openDoor);\r\n        displayText(zombieDoor);\r\n    }\r\n}\r\n\r\nfunction hideMessage() {\r\n    hideText(openDoor);\r\n    hideText(closedDoor);\r\n    hideText(zombieDoor);\r\n}\r\n\r\nfunction displayText(object) {\r\n    object.style.visibility = \"visible\";\r\n}\r\n  \r\nfunction hideText(object) {\r\n    object.style.visibility = \"hidden\";\r\n}\r\n\r\n// ------------------- Trigger Function -------------------\r\n\r\nconst Door1Trigger = new THREE.Box3(\r\n    new THREE.Vector3(1.25, -0.05, -14.65),\r\n    new THREE.Vector3(1.75, 2.05, -13.85)\r\n)\r\nconst Door2Trigger = new THREE.Box3(\r\n    new THREE.Vector3(3.35, -0.05, -14),\r\n    new THREE.Vector3(3.85, 2.05, -13.2)\r\n)\r\nconst Door3Trigger = new THREE.Box3(\r\n    new THREE.Vector3(3.35, -0.05, -9.8),\r\n    new THREE.Vector3(3.85, 2.05, -9.0)\r\n)\r\nconst Door4Trigger = new THREE.Box3(\r\n    new THREE.Vector3(1.25, -0.05, -8.7),\r\n    new THREE.Vector3(1.75, 2.05, -7.9)\r\n)\r\nconst Door5Trigger = new THREE.Box3(\r\n    new THREE.Vector3(3.35, -0.05, -5.1),\r\n    new THREE.Vector3(3.85, 2.05, -4.3)\r\n)\r\nconst Door6Trigger = new THREE.Box3(\r\n    new THREE.Vector3(3.35, -0.05, 1.094),\r\n    new THREE.Vector3(3.85, 2.05, 1.894)\r\n)\r\nconst Door7Trigger = new THREE.Box3(\r\n    new THREE.Vector3(3.35, -0.05, 7.5),\r\n    new THREE.Vector3(3.85, 2.05, 8.3)\r\n)\r\nconst Door8Trigger = new THREE.Box3(\r\n    new THREE.Vector3(1.25, -0.05, 2.6),\r\n    new THREE.Vector3(1.75, 2.05, 3.4)\r\n)\r\nconst goodDoorTrigger = new THREE.Box3(\r\n    new THREE.Vector3(1.25, -0.05, 7.5),\r\n    new THREE.Vector3(1.75, 2.05, 8.3)\r\n)\r\nconst receptionDoorTrigger = new THREE.Box3(\r\n    new THREE.Vector3(1.8, 0, -16.5),\r\n    new THREE.Vector3(3.3, 2.2, -16.1)\r\n)\r\n\r\nconst doorArray = [Door1Trigger, Door2Trigger, Door3Trigger, Door4Trigger, Door5Trigger, Door6Trigger, Door7Trigger]\r\n\r\nfunction intersectobject(playerBox, Trigger, inTrigger, text)\r\n{\r\n    if (playerBox.intersectsBox(Trigger)) {\r\n        if (!inTrigger) {\r\n            console.log(\"Entered the trigger zone\");\r\n            displayText(text);\r\n            return true;\r\n        }\r\n    }\r\n    else {\r\n        if (inTrigger) {\r\n            console.log(\"Exited the trigger zone\");\r\n            hideText(text);\r\n            hideMessage(text);\r\n            return false;\r\n        }\r\n    }\r\n    return inTrigger;\r\n}\r\n\r\nfunction intersectMultipleObject(playerBox, Triggers, inTrigger, text)\r\n{\r\n    let intersect = false;\r\n    for (const Trigger of Triggers) {\r\n        if (playerBox.intersectsBox(Trigger)) {\r\n            if (!inTrigger) {\r\n                console.log(\"Entered the trigger zone\");\r\n                displayText(text);\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    if (inTrigger & !intersect) {\r\n        console.log(\"Exited the trigger zone\");\r\n        hideText(text);\r\n        hideMessage(text);\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction corridorTriggers(playerBox) {\r\n    // Check for door trigger collision\r\n    if (playerBox.intersectsBox(receptionDoorTrigger)) {\r\n        loadNewRoom(\"reception\");\r\n    }\r\n    playerInBadDoorTriggerZone = intersectMultipleObject(playerBox, doorArray, playerInBadDoorTriggerZone, openDoor)\r\n    playerInZombieDoorTriggerZone = intersectobject(playerBox, Door8Trigger, playerInZombieDoorTriggerZone, openDoor)\r\n    playerInGoodDoorTriggerZone = intersectobject(playerBox, goodDoorTrigger, playerInGoodDoorTriggerZone, openDoor)\r\n\r\n}\r\n\r\n\r\nexport { corridorTriggers, showCorridorMessage };","import * as THREE from 'three';\r\n\r\nimport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\r\nimport { Octree } from 'three/addons/math/Octree.js';\r\nimport { Capsule } from 'three/addons/math/Capsule.js';\r\n\r\n// Local imports\r\nimport { loadInfected, infectedLoop, removeInfected } from './entities/moving-infected.js';\r\nimport { flickerNeonLight, loadNeonLight, exteriorTriggers, interact } from './scenes/exterior.js';\r\nimport { idleInfectedLoop, loadIdleInfected } from './entities/idle-infected.js';\r\nimport { hideIntroduction, showIntroduction, waitForAnyKey } from './scenes/intro.js';\r\nimport { loadDrawer, receptionTriggers, showMessage } from './scenes/reception.js';\r\nimport { corridorTriggers, showCorridorMessage } from './scenes/corridor.js';\r\nimport { addListenerToCamera, pauseFootsteps, playExteriorBackgroundMusic, playFootsteps, stopBackgroundMusic } from './utils/sounds.js';\r\n\r\n// -------------------------------- Base setup --------------------------------\r\n\r\nconst clock = new THREE.Clock();\r\n\r\nconst scene = new THREE.Scene();\r\n\r\nconst camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000);\r\ncamera.rotation.order = 'YXZ';\r\n\r\nconst container = document.getElementById('container');\r\n\r\nconst renderer = new THREE.WebGLRenderer({ antialias: true });\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\nrenderer.setAnimationLoop(animate);\r\nrenderer.shadowMap.enabled = true;\r\nrenderer.shadowMap.type = THREE.VSMShadowMap;\r\nrenderer.toneMapping = THREE.ACESFilmicToneMapping;\r\ncontainer.appendChild(renderer.domElement);\r\n\r\nconst GRAVITY = 80; // default: 30\r\n\r\nconst STEPS_PER_FRAME = 1;\r\n\r\nconst worldOctree = new Octree();\r\n\r\nconst playerCollider = new Capsule(new THREE.Vector3(0, 0.35, 0), new THREE.Vector3(0, 1, 0), 0.35);\r\nconst playerLight = new THREE.PointLight(0xffffff, 0.5);\r\nconst playerVelocity = new THREE.Vector3();\r\nconst playerDirection = new THREE.Vector3();\r\n\r\nlet playerOnFloor = false;\r\n\r\nconst keyStates = {};\r\n\r\nconst loader = new GLTFLoader().setPath('/assets/models/');\r\n\r\n// Loading state\r\nlet isLoading = false;\r\n\r\n// Current room state\r\nlet currentRoom = 'exterior';\r\nlet precedentRoom = 'exterior';\r\n\r\n// Cuurent game state\r\nlet gameStarted = false;\r\n\r\n// ------------------------------------ GUI ------------------------------------\r\n\r\nconst loaderElement = document.getElementById('loader');\r\nconst blackScreenElement = document.getElementById('blackscreen');\r\n\r\n// -------------------------------- Event listeners --------------------------------\r\n\r\ndocument.addEventListener('keydown', (event) => {\r\n  keyStates[event.code] = true;\r\n});\r\n\r\ndocument.addEventListener('keyup', (event) => {\r\n  keyStates[event.code] = false;\r\n});\r\n\r\ncontainer.addEventListener('mousedown', () => {\r\n  document.body.requestPointerLock();\r\n});\r\n\r\ndocument.body.addEventListener('mousemove', (event) => {\r\n  if (document.pointerLockElement === document.body) {\r\n    camera.rotation.y -= event.movementX / 500;\r\n    camera.rotation.x -= event.movementY / 500;\r\n  }\r\n});\r\n\r\n// Handle single clicks for interactions specifically\r\ndocument.addEventListener('keyup', (event) => {\r\n  if (event.code === 'KeyE') {\r\n    interact();\r\n  }\r\n});\r\n\r\nwindow.addEventListener('resize', onWindowResize);\r\n\r\n// -------------------------------- Functions --------------------------------\r\n\r\nfunction onWindowResize() {\r\n  camera.aspect = window.innerWidth / window.innerHeight;\r\n  camera.updateProjectionMatrix();\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n}\r\n\r\nfunction playerCollisions() {\r\n  const result = worldOctree.capsuleIntersect(playerCollider);\r\n\r\n  playerOnFloor = false;\r\n\r\n  if (result) {\r\n    playerOnFloor = result.normal.y > 0;\r\n\r\n    if (!playerOnFloor) {\r\n      playerVelocity.addScaledVector(result.normal, - result.normal.dot(playerVelocity));\r\n    }\r\n\r\n    if (result.depth >= 1e-10) {\r\n      playerCollider.translate(result.normal.multiplyScalar(result.depth));\r\n    }\r\n  }\r\n}\r\n\r\nfunction updatePlayer(deltaTime) {\r\n  let damping = Math.exp(- 4 * deltaTime) - 1;\r\n\r\n  if (!playerOnFloor) {\r\n    playerVelocity.y -= GRAVITY * deltaTime;\r\n    // small air resistance\r\n    damping *= 0.1;\r\n  }\r\n\r\n  playerVelocity.addScaledVector(playerVelocity, damping);\r\n\r\n  const deltaPosition = playerVelocity.clone().multiplyScalar(deltaTime);\r\n  playerCollider.translate(deltaPosition);\r\n\r\n  playerCollisions();\r\n\r\n  let playerPositions = playerCollider.end.clone();\r\n  playerPositions.y += 0.8;\r\n\r\n  camera.position.copy(playerPositions);\r\n  playerLight.position.copy(playerCollider.end);\r\n}\r\n\r\nfunction getForwardVector() {\r\n  camera.getWorldDirection(playerDirection);\r\n  playerDirection.y = 0;\r\n  playerDirection.normalize();\r\n  return playerDirection;\r\n}\r\n\r\nfunction getSideVector() {\r\n  camera.getWorldDirection(playerDirection);\r\n  playerDirection.y = 0;\r\n  playerDirection.normalize();\r\n  playerDirection.cross(camera.up);\r\n  return playerDirection;\r\n}\r\n\r\nfunction controls(deltaTime) {\r\n  // gives a bit of air control\r\n  const speedDelta = deltaTime * (playerOnFloor ? 25 : 8);\r\n\r\n  if ((keyStates['KeyW'] || keyStates['KeyS'] || keyStates['KeyA'] || keyStates['KeyD']) && !isLoading) {\r\n    playFootsteps();\r\n  }\r\n  else {\r\n    pauseFootsteps();\r\n  }\r\n\r\n  if (keyStates['KeyW'] && !isLoading) {\r\n    playerVelocity.add(getForwardVector().multiplyScalar(speedDelta));\r\n  }\r\n\r\n  if (keyStates['KeyS'] && !isLoading) {\r\n    playerVelocity.add(getForwardVector().multiplyScalar(- speedDelta));\r\n  }\r\n\r\n  if (keyStates['KeyA'] && !isLoading) {\r\n    playerVelocity.add(getSideVector().multiplyScalar(- speedDelta));\r\n  }\r\n\r\n  if (keyStates['KeyD'] && !isLoading) {\r\n    playerVelocity.add(getSideVector().multiplyScalar(speedDelta));\r\n  }\r\n\r\n  // Jumping\r\n  // if (playerOnFloor) {\r\n  //   if (keyStates['Space']) {\r\n  //     playerVelocity.y = 15;\r\n  //   }\r\n  // }\r\n\r\n  // for reception\r\n  if (keyStates['KeyO']) {\r\n    if (currentRoom === 'reception') {\r\n      showMessage();\r\n    }\r\n    if (currentRoom === 'corridor') {\r\n      showCorridorMessage();\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkTriggers() {\r\n  const playerBox = new THREE.Box3().setFromPoints([\r\n    playerCollider.start,\r\n    playerCollider.end\r\n  ]);\r\n\r\n  if (currentRoom === 'exterior') {\r\n    exteriorTriggers(playerBox);\r\n  }\r\n  if (currentRoom === 'reception') {\r\n    receptionTriggers(playerBox);\r\n  }\r\n  if (currentRoom === 'corridor') {\r\n    corridorTriggers(playerBox);\r\n  }\r\n}\r\n\r\nfunction loadRoom(roomFile) {\r\n  // Show loader before starting the model load\r\n  console.log('Loading room:', roomFile);\r\n  blackScreenElement.style.visibility = 'visible';\r\n  loaderElement.style.visibility = 'visible';\r\n\r\n  loader.load(roomFile, (gltf) => {\r\n    isLoading = true;\r\n\r\n    // Clear the current scene\r\n    removeInfected();\r\n    scene.clear();\r\n    worldOctree.clear()\r\n\r\n    scene.add(gltf.scene);\r\n\r\n    scene.add(playerLight);\r\n\r\n    worldOctree.fromGraphNode(gltf.scene);\r\n\r\n    gltf.scene.traverse(child => {\r\n      if (child.isMesh) {\r\n        child.castShadow = true;\r\n        child.receiveShadow = true;\r\n\r\n        if (child.material.map) {\r\n          child.material.map.anisotropy = 4;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Hide the loader once the model is fully loaded\r\n    setTimeout(() => {\r\n      loaderElement.style.visibility = 'hidden';\r\n      blackScreenElement.style.visibility = 'hidden';\r\n      isLoading = false;\r\n    }, 3000);\r\n\r\n    // Stop the background music\r\n    stopBackgroundMusic();\r\n\r\n    // Reset player position\r\n    if (roomFile == 'exterior.glb') {\r\n      playerCollider.start.set(0, 0.35, 0);\r\n      playerCollider.end.set(0, 1, 0);\r\n      camera.position.copy(playerCollider.end);\r\n      camera.rotation.set(0, 0, 0);\r\n\r\n      // Call the functions from exterior.js\r\n      playExteriorBackgroundMusic();\r\n      loadNeonLight(scene);\r\n    }\r\n    else if (roomFile === 'reception.glb') {\r\n      if (precedentRoom === 'exterior') {\r\n        playerCollider.start.set(5, 0.675, 3);\r\n        playerCollider.end.set(5, 1.325, 3);\r\n        camera.rotation.set(0, 0, 0);\r\n      }\r\n      else {\r\n        playerCollider.start.set(-4.7, 0.675, -4);\r\n        playerCollider.end.set(-4.7, 1.325, -4);\r\n        camera.rotation.set(0, 180, 0);\r\n      }\r\n\r\n      camera.position.copy(playerCollider.end);\r\n      playerLight.position.copy(playerCollider.end);\r\n\r\n      // Call the functions from reception.js\r\n      loadDrawer('drawer.glb', loader, scene);\r\n    }\r\n    else if (roomFile === 'corridor.glb') {\r\n      if (precedentRoom === 'reception') {\r\n        playerCollider.start.set(2.2, 0.675, -15);\r\n        playerCollider.end.set(2.2, 1.325, -15);\r\n        camera.rotation.set(0, 180, 0);\r\n      }\r\n      else {\r\n        playerCollider.start.set(2.5, 0.675, 8);\r\n        playerCollider.end.set(2.5, 1.325, 8);\r\n        camera.rotation.set(0, 0, 0);\r\n      }\r\n      camera.position.copy(playerCollider.end);\r\n      playerLight.position.copy(playerCollider.end);\r\n\r\n      // Call the functions from reception.js\r\n      loadIdleInfected('idle-infected.glb', loader, scene, new THREE.Vector3(-2, 0, 3.5), new THREE.Vector3(0, 180, 0));\r\n    }\r\n  },\r\n    (progress) => {\r\n      // Update progress if needed (e.g., progress bar, percentage)\r\n      console.log((progress.loaded / progress.total * 100) + '%');\r\n    },\r\n    (error) => {\r\n      // Handle errors in loading\r\n      console.error('An error occurred while loading the model:', error);\r\n      loaderElement.style.visibility = 'hidden';\r\n      blackScreenElement.style.visibility = 'hidden';\r\n    }\r\n  );\r\n}\r\n\r\nfunction loadNewRoom(roomName) {\r\n  precedentRoom = currentRoom;\r\n  currentRoom = roomName;\r\n  loadRoom(roomName + '.glb');\r\n}\r\n\r\nfunction teleportPlayerIfOob() {\r\n  if (camera.position.y <= - 25) {\r\n    playerCollider.start.set(0, 0.35, 0);\r\n    playerCollider.end.set(0, 1, 0);\r\n    playerCollider.radius = 0.35;\r\n    camera.position.copy(playerCollider.end);\r\n    camera.rotation.set(0, 0, 0);\r\n    playerLight.position.copy(playerCollider.end);\r\n  }\r\n}\r\n\r\nfunction spawnInfected() {\r\n  loadInfected('moving-infected.glb', loader, scene);\r\n}\r\n\r\n// -------------------------------- Load the initial room --------------------------------\r\n\r\naddListenerToCamera(camera);\r\n\r\nshowIntroduction();\r\n\r\nif (!gameStarted) {\r\n  waitForAnyKey(() => {\r\n    gameStarted = true;\r\n    hideIntroduction();\r\n\r\n    // Initial room load\r\n    loadRoom('exterior.glb');\r\n  });\r\n}\r\n\r\n// -------------------------------- Main loop --------------------------------\r\n\r\nfunction animate() {\r\n  const deltaTime = Math.min(0.05, clock.getDelta()) / STEPS_PER_FRAME;\r\n\r\n  // we look for collisions in substeps to mitigate the risk of\r\n  // an object traversing another too quickly for detection.\r\n\r\n  for (let i = 0; i < STEPS_PER_FRAME; i++) {\r\n    infectedLoop(deltaTime, playerCollider);\r\n    idleInfectedLoop(deltaTime);\r\n    controls(deltaTime);\r\n    updatePlayer(deltaTime);\r\n    teleportPlayerIfOob();\r\n    flickerNeonLight();\r\n    checkTriggers();\r\n  }\r\n  renderer.render(scene, camera);\r\n}\r\n\r\n// exports\r\nexport { loadNewRoom, spawnInfected }"],"names":["overlay","flashRed","listener","THREE.AudioListener","audioLoader","THREE.AudioLoader","exteriorBackgroundMusic","THREE.Audio","buffer","scaryViolins","shepardTone","biteScarySound","biteSound","paperSound","doorSound","lockedDoorSound","corpseNoise","footsteps","infectedSound","THREE.PositionalAudio","lampSound","addListenerToCamera","camera","addSoundToInfected","infected","addSoundToLamp","lamp","playExteriorBackgroundMusic","stopBackgroundMusic","playBiteSound","playInfectedChase","stopInfectedChase","playPaperSound","playDoorSound","playLockedDoorSound","playCorpseNoise","playFootsteps","pauseFootsteps","model","mixer","idleAction","walkAction","walkWithArmsAction","runAction","attackAction","fallBackwardAction","isFallingBack","isDead","infectedSpeed","infectedBite","loadInfected","infectedFile","loader","scene","state","gltf","object","animations","THREE.AnimationMixer","fromRunTofallBack","THREE.LoopOnce","infectedLoop","deltaTime","playerCollider","playerPosition","direction","THREE.Vector3","lookAt","removeInfected","material","validCode","codeInput","solvedCodeText","clearCode","removeCodeListener","checkCode","addDigit","digit","keyHandler","event","getKey","spawnInfected","removeCodeTrigger","useCode","doorKeyFound","playerInDoorTriggerZone","playerInCorpseTriggerZone","playerInCodeTriggerZone","playerInFileTriggerZone","playerInReportTriggerZone","playerInCharlesNoteTriggerZone","doorTrigger","THREE.Box3","corpseTrigger","codeTrigger","fileTrigger","reportTrigger","charlesNoteTrigger","doorText","corpseText","fileText","reportText","charlesNoteText","codeText","doorExam","corpseExam","corpseTimeline","report","charlesNote","fadedScreen","interact","hideDoorText","loadNewRoom","showDoorExam","showCorpseExam","showFile","hideFileText","hideFile","showFileText","showReport","hideReportText","hideReport","showReportText","showCharlesNote","hideCharlesNoteText","hideCharlesNote","showCharlesNoteText","hideDoorExam","showDoorText","hideCorpseExam","showCorpseText","hideCorpseText","showCodeText","hideCodeText","exteriorTriggers","playerBox","neonLight","THREE.PointLight","loadNeonLight","getRandomInt","max","flickerNeonLight","loadIdleInfected","position","rotation","idleInfectedLoop","blackScreenElement","introText","showIntroduction","hideIntroduction","waitForAnyKey","callback","onKeyDown","drawer1Text","drawer2Text","goodDrawerText","badText","goodText","searchedText","useCardText","dontOpenText","openText","playerInDrawer1TriggerZone","playerInDrawer2TriggerZone","playerInGoodDrawerTriggerZone","playerInRightDoorTriggerZone","playerInLeftDoorTriggerZone","animateDrawer","itemsOn","leftDoorOpen","showMessage","hideText","displayText","hideMessage","interiorDoorTrigger","drawer1Trigger","drawer2Trigger","goodDrawerTrigger","rightDoorTrigger","leftDoorTrigger","intersectobject","Trigger","inTrigger","text","loadDrawer","drawer","receptionTriggers","openDoor","closedDoor","zombieDoor","playerInBadDoorTriggerZone","playerInZombieDoorTriggerZone","playerInGoodDoorTriggerZone","showCorridorMessage","Door1Trigger","Door2Trigger","Door3Trigger","Door4Trigger","Door5Trigger","Door6Trigger","Door7Trigger","Door8Trigger","goodDoorTrigger","receptionDoorTrigger","doorArray","intersectMultipleObject","Triggers","intersect","corridorTriggers","clock","THREE.Clock","THREE.Scene","THREE.PerspectiveCamera","container","renderer","THREE.WebGLRenderer","animate","THREE.VSMShadowMap","THREE.ACESFilmicToneMapping","GRAVITY","STEPS_PER_FRAME","worldOctree","Octree","Capsule","playerLight","playerVelocity","playerDirection","playerOnFloor","keyStates","GLTFLoader","isLoading","currentRoom","precedentRoom","gameStarted","loaderElement","onWindowResize","playerCollisions","result","updatePlayer","damping","deltaPosition","playerPositions","getForwardVector","getSideVector","controls","speedDelta","checkTriggers","loadRoom","roomFile","child","progress","error","roomName","teleportPlayerIfOob","i"],"mappings":"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"}